// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.17.1
// source: replica/v1/replica.proto

package replica

import (
	proto "github.com/golang/protobuf/proto"
	object "github.com/rotationalio/honu/object"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// VersionVectors initiate a Gossip RPC by passing along the current state of the
// namespace of objects on the initiating replica. Objects should not have data
// populated in this message, only metadata. If the partial flag is set, that indicates
// that the replica only wants to consider the objects described rather than the entire
// namespace (e.g. objects that may have been created outside the set of objects
// described). The partial flag is typically used as a mechanism to fetch specific
// objects that are known to be later from the remote replica. The namespaces array
// specifies which namespaces should be considered in gossip allowing for partial
// replication by namespace if necessary. If the namespaces array is empty, then all
// namespaces are considered during Gossip.
type VersionVectors struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Version vectors of objects without data.
	Objects []*object.Object `protobuf:"bytes,1,rep,name=objects,proto3" json:"objects,omitempty"`
	// A request to consider only the objects specified in the version vector and not
	// the entire namespace (e.g. ignore objects that are not specified).
	Partial bool `protobuf:"varint,2,opt,name=partial,proto3" json:"partial,omitempty"`
	// Limit the comparison only to the specified namespace(s). If not set or empty,
	// then all namespaces are considered.
	Namespaces []string `protobuf:"bytes,3,rep,name=namespaces,proto3" json:"namespaces,omitempty"`
}

func (x *VersionVectors) Reset() {
	*x = VersionVectors{}
	if protoimpl.UnsafeEnabled {
		mi := &file_replica_v1_replica_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VersionVectors) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersionVectors) ProtoMessage() {}

func (x *VersionVectors) ProtoReflect() protoreflect.Message {
	mi := &file_replica_v1_replica_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VersionVectors.ProtoReflect.Descriptor instead.
func (*VersionVectors) Descriptor() ([]byte, []int) {
	return file_replica_v1_replica_proto_rawDescGZIP(), []int{0}
}

func (x *VersionVectors) GetObjects() []*object.Object {
	if x != nil {
		return x.Objects
	}
	return nil
}

func (x *VersionVectors) GetPartial() bool {
	if x != nil {
		return x.Partial
	}
	return false
}

func (x *VersionVectors) GetNamespaces() []string {
	if x != nil {
		return x.Namespaces
	}
	return nil
}

// Updates returns data to repair entropy (e.g. to repair the divergence caused by
// updates). Updates should only contain the objects that have later versions and the
// objects should have their data fields populated.
type Updates struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Objects []*object.Object `protobuf:"bytes,1,rep,name=objects,proto3" json:"objects,omitempty"`
}

func (x *Updates) Reset() {
	*x = Updates{}
	if protoimpl.UnsafeEnabled {
		mi := &file_replica_v1_replica_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Updates) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Updates) ProtoMessage() {}

func (x *Updates) ProtoReflect() protoreflect.Message {
	mi := &file_replica_v1_replica_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Updates.ProtoReflect.Descriptor instead.
func (*Updates) Descriptor() ([]byte, []int) {
	return file_replica_v1_replica_proto_rawDescGZIP(), []int{1}
}

func (x *Updates) GetObjects() []*object.Object {
	if x != nil {
		return x.Objects
	}
	return nil
}

var File_replica_v1_replica_proto protoreflect.FileDescriptor

var file_replica_v1_replica_proto_rawDesc = []byte{
	0x0a, 0x18, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x65, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x68, 0x6f, 0x6e, 0x75,
	0x2e, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x2e, 0x76, 0x31, 0x1a, 0x16, 0x6f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x7c, 0x0a, 0x0e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x56, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x30, 0x0a, 0x07, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x68, 0x6f, 0x6e, 0x75, 0x2e, 0x6f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x07,
	0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x72, 0x74, 0x69,
	0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x70, 0x61, 0x72, 0x74, 0x69, 0x61,
	0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x73, 0x22, 0x3b, 0x0a, 0x07, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x12, 0x30, 0x0a, 0x07,
	0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x68, 0x6f, 0x6e, 0x75, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x07, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x32, 0x54,
	0x0a, 0x0b, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x45, 0x0a,
	0x06, 0x47, 0x6f, 0x73, 0x73, 0x69, 0x70, 0x12, 0x1f, 0x2e, 0x68, 0x6f, 0x6e, 0x75, 0x2e, 0x72,
	0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x1a, 0x18, 0x2e, 0x68, 0x6f, 0x6e, 0x75, 0x2e,
	0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x73, 0x22, 0x00, 0x42, 0x26, 0x5a, 0x24, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x69, 0x6f, 0x2f,
	0x68, 0x6f, 0x6e, 0x75, 0x2f, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_replica_v1_replica_proto_rawDescOnce sync.Once
	file_replica_v1_replica_proto_rawDescData = file_replica_v1_replica_proto_rawDesc
)

func file_replica_v1_replica_proto_rawDescGZIP() []byte {
	file_replica_v1_replica_proto_rawDescOnce.Do(func() {
		file_replica_v1_replica_proto_rawDescData = protoimpl.X.CompressGZIP(file_replica_v1_replica_proto_rawDescData)
	})
	return file_replica_v1_replica_proto_rawDescData
}

var file_replica_v1_replica_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_replica_v1_replica_proto_goTypes = []interface{}{
	(*VersionVectors)(nil), // 0: honu.replica.v1.VersionVectors
	(*Updates)(nil),        // 1: honu.replica.v1.Updates
	(*object.Object)(nil),  // 2: honu.object.v1.Object
}
var file_replica_v1_replica_proto_depIdxs = []int32{
	2, // 0: honu.replica.v1.VersionVectors.objects:type_name -> honu.object.v1.Object
	2, // 1: honu.replica.v1.Updates.objects:type_name -> honu.object.v1.Object
	0, // 2: honu.replica.v1.Replication.Gossip:input_type -> honu.replica.v1.VersionVectors
	1, // 3: honu.replica.v1.Replication.Gossip:output_type -> honu.replica.v1.Updates
	3, // [3:4] is the sub-list for method output_type
	2, // [2:3] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_replica_v1_replica_proto_init() }
func file_replica_v1_replica_proto_init() {
	if File_replica_v1_replica_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_replica_v1_replica_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VersionVectors); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_replica_v1_replica_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Updates); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_replica_v1_replica_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_replica_v1_replica_proto_goTypes,
		DependencyIndexes: file_replica_v1_replica_proto_depIdxs,
		MessageInfos:      file_replica_v1_replica_proto_msgTypes,
	}.Build()
	File_replica_v1_replica_proto = out.File
	file_replica_v1_replica_proto_rawDesc = nil
	file_replica_v1_replica_proto_goTypes = nil
	file_replica_v1_replica_proto_depIdxs = nil
}
